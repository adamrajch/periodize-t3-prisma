// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
	provider = "prisma-client-js"
	previewFeatures = ["fullTextSearch"]
}

datasource db {
	provider = "postgresql" // NOTE: sqlite does not work with NextAuth.js
	url      = env("DATABASE_URL")
}

model Example {
	id String @id @default(cuid())
}

model User {
	id            String    @id @default(cuid())
	name          String?
	email         String?   @unique
	emailVerified DateTime?
	image         String?
	accounts      Account[]
	sessions      Session[]
	programs      Program[]
}

 

model Program{
	id          String  @id @default(uuid())
	title       String	
	description String?
    author		User	@relation(fields:[authorId], references:[id])
	authorId	String 
	isPublic	Boolean @default(false)
	tags		String[]
	schema		Json? 
	createdAt	DateTime	@default(now())
	updatedAt	DateTime 	@updatedAt
}

// Necessary for Next auth
model Account {
	id                String  @id @default(cuid())
	userId            String
	type              String
	provider          String
	providerAccountId String
	refresh_token     String?
	refresh_token_expires_in  Int?
	access_token      String?
	expires_at        Int?
	token_type        String?
	scope             String?
	id_token          String?
	session_state     String?
	user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

	@@unique([provider, providerAccountId])
}

model Session {
	id           String   @id @default(cuid())
	sessionToken String   @unique
	userId       String
	expires      DateTime
	user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
	identifier String
	token      String   @unique
	expires    DateTime

	@@unique([identifier, token])
}
